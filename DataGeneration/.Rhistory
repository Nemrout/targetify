y = clicks_cum,
color = group))
library(ggplot2)
page_main.data <- page_main.data[order(page_main.data$date, decreasing = TRUE), ]
page_main.data$clicks_cum <- cumsum(page_main.data$clicks)
ggplot(page_main.data[page_main.data$group == 0, ]) +
geom_line(aes(
x = date,
y = clicks_cum,
color = group))
ggplot(page_main.data[page_main.data$group == 0, ]) +
geom_point(aes(
x = date,
y = clicks_cum,
color = group))
page_main.data <- page_main.data[order(page_main.data$date, decreasing = FALSE), ]
page_main.data$clicks_cum <- cumsum(page_main.data$clicks)
ggplot(page_main.data[page_main.data$group == 0, ]) +
geom_point(aes(
x = date,
y = clicks_cum,
color = group))
ggplot(page_main.data) +
geom_point(aes(
x = date,
y = clicks_cum,
color = group))
page_main.data
page_main.data$group <- ifelse(page_main.data$group == 0, "A", "B")
ggplot(page_main.data) +
geom_point(aes(
x = date,
y = clicks_cum,
color = group))
ggplot(page_main.data) +
geom_point(aes(
x = date,
y = clicks,
color = group))
ggplot(page_main.data) +
geom_point(aes(
x = date,
y = clicks,
color = group))
ggplot(page_main.data) +
geom_point(aes(
x = date,
y = clicks,
color = group)) +
scale_y_log10()
ggplot(page_main.data) +
geom_line(aes(
x = date,
y = clicks,
color = group)) +
scale_y_log10()
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(stringr)
library(ggplot2)
row_count <- 1000
generate.random <- function(min.value, max.value, integer = FALSE) {
v <- rpois(row_count, lambda = 10)
v.max <- max(v)
v <- v / v.max
min.v <- min(v)
max.v <- max(v)
min.factor <- min.value / min.v
max.factor <- max.value / max.v
factors <- c(min.factor, max.factor)
factors <- sample(factors, row_count, replace = TRUE)
v <- v * min(factors)
return(v)
}
generate.categorical <- function(level) {
ifelse(rnorm(row_count) > level, 0, 1)
}
row_count <- 1221
page_main.data <- generate.data(
lambda = 0.05,
clicks.min = 2,
clicks.max = 20,
lifetime.min = 3,
lifetime.max = 120,
china.count = 6,
india.count = 5,
safari.count = 4,
chrome.count = 8,
clicks.factor = 2.11,
lifetime.factor = 1.56
)
row_count <- 608
page_login.data <- generate.data(
lambda = 0.45,
clicks.min = 2,
clicks.max = 11,
lifetime.min = 20,
lifetime.max = 160,
china.count = 10,
india.count = 9,
safari.count = 4,
chrome.count = 8,
clicks.factor = 2.56,
lifetime.factor = 1.23
)
row_count <- 492
page_pricing.data <- generate.data(
lambda = 0.55,
clicks.min = 2,
clicks.max = 25,
lifetime.min = 5,
lifetime.max = 145,
china.count = 4,
india.count = 8,
safari.count = 7,
chrome.count = 10,
clicks.factor = 1.77,
lifetime.factor = 0.77
)
write.csv(page_main.data, "page_main.csv")
write.csv(page_login.data, "page_login.csv")
write.csv(page_pricing.data, "page_pricing.csv")
page_main.data <- page_main.data[order(page_main.data$date, decreasing = FALSE), ]
page_main.data$clicks_cum <- cumsum(page_main.data$clicks)
page_main.data$group <- ifelse(page_main.data$group == 0, "A", "B")
ggplot(page_main.data) +
geom_line(aes(
x = date,
y = clicks,
color = group)) +
scale_y_log10()
row_count <- 1221
page_main.data <- generate.data(
lambda = 0.05,
clicks.min = 2,
clicks.max = 20,
lifetime.min = 3,
lifetime.max = 120,
china.count = 6,
india.count = 5,
safari.count = 4,
chrome.count = 8,
clicks.factor = 2.11,
lifetime.factor = 1.56
)
row_count <- 608
page_login.data <- generate.data(
lambda = 0.45,
clicks.min = 2,
clicks.max = 11,
lifetime.min = 20,
lifetime.max = 160,
china.count = 10,
india.count = 9,
safari.count = 4,
chrome.count = 8,
clicks.factor = 2.56,
lifetime.factor = 1.23
)
row_count <- 492
page_pricing.data <- generate.data(
lambda = 0.55,
clicks.min = 2,
clicks.max = 25,
lifetime.min = 5,
lifetime.max = 145,
china.count = 4,
india.count = 8,
safari.count = 7,
chrome.count = 10,
clicks.factor = 1.77,
lifetime.factor = 0.77
)
row_count <- 1221
page_main.data <- generate.data(
lambda = 0.05,
clicks.min = 2,
clicks.max = 20,
lifetime.min = 3,
lifetime.max = 120,
china.count = 6,
india.count = 5,
safari.count = 4,
chrome.count = 8,
clicks.factor = 2.11,
lifetime.factor = 1.56
)
row_count <- 608
page_login.data <- generate.data(
lambda = 0.45,
clicks.min = 2,
clicks.max = 11,
lifetime.min = 20,
lifetime.max = 160,
china.count = 10,
india.count = 9,
safari.count = 4,
chrome.count = 8,
clicks.factor = 2.56,
lifetime.factor = 1.23
)
row_count <- 492
page_pricing.data <- generate.data(
lambda = 0.55,
clicks.min = 2,
clicks.max = 25,
lifetime.min = 5,
lifetime.max = 145,
china.count = 4,
india.count = 8,
safari.count = 7,
chrome.count = 10,
clicks.factor = 1.77,
lifetime.factor = 0.77
)
page_pricing.data
order(page_pricing.data, by = "date")
page_pricing.data
page_pricing.data[order(date)]
page_pricing.data[order(date), ]
page_pricing.data
page_pricing.data[order(date), ]
page_pricing.data[order(page_pricing.data$date), ]
write.csv(page_main.data, "pagelite_main.csv")
write.csv(page_login.data, "pagelite_login.csv")
write.csv(page_pricing.data, "pagelite_pricing.csv")
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(stringr)
library(ggplot2)
# having couple of pages, that websites usually have
# 1. Log in
# 2. Home page
# 3. Pricing
row_count <- 1000
generate.random <- function(min.value, max.value, integer = FALSE) {
v <- rpois(row_count, lambda = 10)
v.max <- max(v)
v <- v / v.max
min.v <- min(v)
max.v <- max(v)
min.factor <- min.value / min.v
max.factor <- max.value / max.v
factors <- c(min.factor, max.factor)
factors <- sample(factors, row_count, replace = TRUE)
v <- v * min(factors)
return(v)
}
generate.categorical <- function(level) {
ifelse(rnorm(row_count) > level, 0, 1)
}
generate.data <- function(lambda, clicks.min, clicks.max, lifetime.min, lifetime.max, china.count, india.count, safari.count, chrome.count, clicks.factor, lifetime.factor) {
ids <- c(1:row_count)
groups <- generate.categorical(lambda)
clicks.random.values <- generate.random(clicks.min, clicks.max)
clicks <- as.integer(clicks.random.values)
lifetime <- as.integer(generate.random(lifetime.min, lifetime.max))
countries.vector <- c(rep("China", china.count), rep("India", india.count), "Indonesia", "United States", "United States", "Germany", "United Kingdom", "France", "Italy", "Italy", "Spain")
countries <- sample(countries.vector, row_count, replace = TRUE)
browsers.vector <- c(rep("Safari", safari.count), rep("Chrome", chrome.count), "Mozilla", "Internet Explorer", "Opera", "Opera", "Opera", "Opera", "Thor")
browsers <- sample(browsers.vector, row_count, replace = TRUE)
dates <- lubridate::as_datetime(runif(row_count, 1546290000, 1577739600))
data <- data.frame(
id = ids,
group = groups,
clicks = clicks,
lifetime = lifetime,
country = countries,
browser = browsers,
date = dates
)
data[data$group == 0, ]$clicks = as.integer(data[data$group == 0, ]$clicks * clicks.factor)
data[data$group == 1, ]$lifetime = data[data$group == 1, ]$lifetime * lifetime.factor
germany <- data[data$country == "Germany", ]
germany.group.1 <- germany[germany$group == 1, ]
germany.group.1$country <- sample(unique(countries.vector), nrow(germany.group.1), replace = TRUE)
data[data$group == 1 & data$country == "Germany", ] <- germany.group.1
explorer.group.0 <- data[data$browser == "Internet Explorer" & data$group == 0, ]
explorer.group.0$browser <- sample(unique(browsers.vector), nrow(explorer.group.0), replace = TRUE)
data[data$group == 0 & data$browser == "Internet Explorer", ] <- explorer.group.0
return(data)
}
model <- lm(group ~ ., new.data)
model.sum <- summary(model)
model.sum
row_count <- 1221
page_main.data <- generate.data(
lambda = 0.05,
clicks.min = 2,
clicks.max = 20,
lifetime.min = 3,
lifetime.max = 120,
china.count = 6,
india.count = 5,
safari.count = 4,
chrome.count = 8,
clicks.factor = 2.11,
lifetime.factor = 1.56
)
row_count <- 608
page_login.data <- generate.data(
lambda = 0.45,
clicks.min = 2,
clicks.max = 11,
lifetime.min = 20,
lifetime.max = 160,
china.count = 10,
india.count = 9,
safari.count = 4,
chrome.count = 8,
clicks.factor = 2.56,
lifetime.factor = 1.23
)
row_count <- 492
page_pricing.data <- generate.data(
lambda = 0.55,
clicks.min = 2,
clicks.max = 25,
lifetime.min = 5,
lifetime.max = 145,
china.count = 4,
india.count = 8,
safari.count = 7,
chrome.count = 10,
clicks.factor = 1.77,
lifetime.factor = 0.77
)
page_pricing.data
page_pricing.data[order(page_pricing.data$date), ]
write.csv(page_main.data, "pagelite_main.csv")
write.csv(page_login.data, "pagelite_login.csv")
write.csv(page_pricing.data, "pagelite_pricing.csv")
page_main.data <- page_main.data[order(page_main.data$date, decreasing = FALSE), ]
page_main.data$clicks_cum <- cumsum(page_main.data$clicks)
page_main.data$group <- ifelse(page_main.data$group == 0, "A", "B")
ggplot(page_main.data) +
geom_line(aes(
x = date,
y = clicks,
color = group)) +
scale_y_log10()
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(stringr)
library(ggplot2)
main.group.codes <- c("original",
"title on left & login button is red",
"title on right & login button is red",
"title on left & login button is orange",
"title on right & login button is orange",
"smooth scrolling enabled",
"support window in bottom-right corner",
"pricing bolded",
"menu is dropdown",
"website map at the bottom")
login.group.codes <- c("original",
"text fields bolded",
"instruction showed",
"text fields magnified",
"name and surname required",
"difficult password required",
"tooltip for textfields visible",
"captcha",
"verification email",
"email required")
pricing.group.codes <- c("original",
"pricing ascending order",
"prices bolded",
"prices italiazed",
"features list is manual",
"page is long",
"a lot of text",
"can pay right away",
"consultation button",
"captcha")
group.info <- data.frame(group = groups, main = main.group.codes, login = login.group.codes, pricing = pricing.group.codes)
row_count <- 1000
groups <- seq(0, 9)
generate.random <- function(min.value, max.value, integer = FALSE) {
v <- rpois(row_count, lambda = 10)
v.max <- max(v)
v <- v / v.max
min.v <- min(v)
max.v <- max(v)
min.factor <- min.value / min.v
max.factor <- max.value / max.v
factors <- c(min.factor, max.factor)
factors <- sample(factors, row_count, replace = TRUE)
v <- v * min(factors)
return(v)
}
generate.categorical <- function(level) {
ifelse(rnorm(row_count) > level, 0, 1)
}
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(stringr)
library(ggplot2)
main.group.codes <- c("original",
"title on left & login button is red",
"title on right & login button is red",
"title on left & login button is orange",
"title on right & login button is orange",
"smooth scrolling enabled",
"support window in bottom-right corner",
"pricing bolded",
"menu is dropdown",
"website map at the bottom")
login.group.codes <- c("original",
"text fields bolded",
"instruction showed",
"text fields magnified",
"name and surname required",
"difficult password required",
"tooltip for textfields visible",
"captcha",
"verification email",
"email required")
pricing.group.codes <- c("original",
"pricing ascending order",
"prices bolded",
"prices italiazed",
"features list is manual",
"page is long",
"a lot of text",
"can pay right away",
"consultation button",
"captcha")
group.info <- data.frame(group = groups, main = main.group.codes, login = login.group.codes, pricing = pricing.group.codes)
group.info
main.clicks.mean <- c()
main.lifetime.mean <- c()
login.clicks.mean <- c()
login.lifetime.mean <- c()
pricing.clicks.mean <- c()
pricing.lifetime.mean <- c()
pages <- c("main", "login", "pricing")
page.codes <- c()
for (page in pages) {
for (group in groups) {
page.code <- paste(page, group, sep = ".")
page.codes <- append(page.codes, page.code)
if (page == "main") {
main.clicks.mean <- append(main.clicks.mean, mean(page_main.data[page_main.data$group == group, ]$clicks))
main.lifetime.mean <- append(main.lifetime.mean, mean(page_main.data[page_main.data$group == group, ]$lifetime))
}
if (page == "login") {
login.clicks.mean <- append(login.clicks.mean, mean(page_login.data[page_login.data$group == group, ]$clicks))
login.lifetime.mean <- append(login.lifetime.mean, mean(page_login.data[page_login.data$group == group, ]$lifetime))
}
if (page == "pricing") {
pricing.clicks.mean <- append(pricing.clicks.mean, mean(page_pricing.data[page_pricing.data$group == group, ]$clicks))
pricing.lifetime.mean <- append(pricing.lifetime.mean, mean(page_pricing.data[page_pricing.data$group == group, ]$lifetime))
}
}
}
row_count <- 1000
groups <- seq(0, 9)
generate.random <- function(min.value, max.value, integer = FALSE) {
v <- rpois(row_count, lambda = 10)
v.max <- max(v)
v <- v / v.max
min.v <- min(v)
max.v <- max(v)
min.factor <- min.value / min.v
max.factor <- max.value / max.v
factors <- c(min.factor, max.factor)
factors <- sample(factors, row_count, replace = TRUE)
v <- v * min(factors)
return(v)
}
generate.categorical <- function(level) {
ifelse(rnorm(row_count) > level, 0, 1)
}
generate.data <- function(lambda, clicks.min, clicks.max, lifetime.min, lifetime.max, china.count, india.count, safari.count, chrome.count, clicks.factor, lifetime.factor) {
ids <- c(1:row_count)
groups <- sample(groups, row_count, replace = TRUE)
clicks.random.values <- generate.random(clicks.min, clicks.max)
clicks <- as.integer(clicks.random.values)
lifetime <- as.integer(generate.random(lifetime.min, lifetime.max))
countries.vector <- c(rep("China", china.count), rep("India", india.count), "Indonesia", "United States", "United States", "Germany", "United Kingdom", "France", "Italy", "Italy", "Spain")
countries <- sample(countries.vector, row_count, replace = TRUE)
browsers.vector <- c(rep("Safari", safari.count), rep("Chrome", chrome.count), "Mozilla", "Internet Explorer", "Opera", "Opera", "Opera", "Opera", "Thor")
browsers <- sample(browsers.vector, row_count, replace = TRUE)
dates <- lubridate::as_datetime(runif(row_count, 1546290000, 1577739600))
data <- data.frame(
id = ids,
group = groups,
clicks = clicks,
lifetime = lifetime,
country = countries,
browser = browsers,
date = dates
)
## choose 3-5 groups
## scale their lifetime and clicks by a factor * |random noise| < 1
groups.to.scale <- sample(groups, sample(c(3,4,5), 1), replace = TRUE)
for (group.to.scale in groups.to.scale) {
random.noise <- runif(1, min = -0.25, max = 0.25)
data[data$group == group.to.scale, ]$clicks = as.integer(data[data$group == group.to.scale, ]$clicks * (clicks.factor + random.noise))
data[data$group == group.to.scale, ]$lifetime = data[data$group == group.to.scale, ]$lifetime * (lifetime.factor + random.noise)
germany <- data[data$country == "Germany", ]
germany.group.1 <- germany[germany$group == 1, ]
germany.group.1$country <- sample(unique(countries.vector), nrow(germany.group.1), replace = TRUE)
data[data$group == 1 & data$country == "Germany", ] <- germany.group.1
explorer.group.0 <- data[data$browser == "Internet Explorer" & data$group == 0, ]
explorer.group.0$browser <- sample(unique(browsers.vector), nrow(explorer.group.0), replace = TRUE)
data[data$group == 0 & data$browser == "Internet Explorer", ] <- explorer.group.0
}
return(data)
}
page_main.data <- page_main.data[order(page_main.data$date, decreasing = FALSE), ]
